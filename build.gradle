ext.androidBuildTools = '24.0.1'
ext.supportLibVersion = '24.1.0'
ext.AnySoftKeyboardApiVersion = '1.3.5'

ext.sdkTargetVersion = 23
ext.sdkCompileVersion = 23
ext.sdkMinimumVersion = 7

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'io.fabric.tools:gradle:1.21.5'
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.8"
        classpath 'com.github.triplet.gradle:play-publisher:1.1.4'
        classpath 'com.github.AnySoftKeyboard.AnySoftKeyboardTools:makedictionary:c00bc22ab2f7561633bcb2d6879ea0740ccad633'
        classpath 'com.github.AnySoftKeyboard.AnySoftKeyboardTools:generatewordslist:c00bc22ab2f7561633bcb2d6879ea0740ccad633'
        classpath 'org.jsoup:jsoup:1.9.1'
        classpath 'com.github.gfx.ribbonizer:plugin:0.6.0'
    }
}

apply plugin: "net.ltgt.errorprone"
apply plugin: 'pmd'

configurations.errorprone {
    resolutionStrategy.force 'com.google.errorprone:error_prone_core:2.0.11'
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://jitpack.io" }
    }
}

task parseStateAssembly(type: com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask) {
    inputFile new File(project.getProjectDir(), "english_dictionary/NY_STATE_ASSEMBLY_TRANSCRIPT_20120621.txt")
    outputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_ny_state_assembly.xml")
}

task parseEnWikipediaManualOfStyle(type: com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask) {
    inputFile new File(project.getProjectDir(), "english_dictionary/Wikipedia_talk_Manual_of_Style.htm")
    inputFileType = com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask.InputFileType.Html
    //Download the archive from https://dumps.wikimedia.org/other/static_html_dumps/current/simple/
    outputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_manual_of_style.xml")
}

task parseEnWikipediaJimboUser(type: com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask) {
    inputFile new File(project.getProjectDir(), "english_dictionary/Wikipedia_User_talk_Jimbo_Wales.htm")
    inputFileType = com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask.InputFileType.Html
    //Download the archive from https://dumps.wikimedia.org/other/static_html_dumps/current/simple/
    outputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_jimbo.xml")
}

task parseEnWikipediaEnglishCivilWar(type: com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask) {
    inputFile new File(project.getProjectDir(), "english_dictionary/First_English_Civil_War_Wikipedia.htm")
    inputFileType = com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask.InputFileType.Html
    //Download the archive from https://dumps.wikimedia.org/other/static_html_dumps/current/simple/
    outputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_civil_war.xml")
}

task mergeAllWordLists(type: com.anysoftkeyboard.tools.generatewordslist.MergeWordsListTask) {
    dependsOn parseStateAssembly
    dependsOn parseEnWikipediaManualOfStyle
    dependsOn parseEnWikipediaJimboUser
    dependsOn parseEnWikipediaEnglishCivilWar

    inputWordsListFiles = [
            new File(project.getProjectDir(), "english_dictionary/words.xml"),//legacy dictionary
            new File(project.getProjectDir(), "english_dictionary/words_ny_state_assembly.xml"),
            new File(project.getProjectDir(), "english_dictionary/popular_websites_words.xml"),//website I use most
            new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_manual_of_style.xml"),
            new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_civil_war.xml"),
            new File(project.getProjectDir(), "english_dictionary/words_en_wikipedia_jimbo.xml")
    ] as File[]
    outputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_merged.xml")
    maxWordsInList 100000

    wordsToDiscard = ['clubbing\'s', 'muggins\'s', 'olefin', 'cs\'s']
}

task makeEnglishDictionary(type: com.anysoftkeyboard.tools.makedictionary.MakeDictionaryTask) {
    dependsOn mergeAllWordLists
    inputWordsListFile new File(project.getProjectDir(), "english_dictionary/words_merged.xml")
}

