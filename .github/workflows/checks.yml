name: checks

on:
  push:
    branches:
      - master
      - release-branch-v*
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '**.md'

env:
  TERM: dumb
  GRADLE_OPTS: "-Dorg.gradle.daemon=false --stacktrace"
  GRADLE_USER_HOME: ".github_cache_gradle/"
  TMPDIR: "/tmp"

jobs:
  setup:
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    steps:
      - uses: actions/checkout@v2
      - name: github_object
        env:
          GITHUB_CONTEXT_JSON: ${{ toJson(github) }}
        run: mkdir -p build/github_object && echo "${GITHUB_CONTEXT_JSON}" > build/github_object/github_object.json
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: github_object
          path: build/github_object
      - name: setup
        run: ./scripts/ci/ci_setup.sh

  checks:
    needs: [setup]
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: .github_cache_gradle/
          key: checks-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('buildSrc/**/*.java') }}
          restore-keys: |
            checks-gradle-
      - name: check
        run: ./scripts/ci/ci_check.sh
      - uses: ./.github/actions/collect-reports
        if: always()
        with:
          file_pattern: checkstyle*.html
          output_folder: collected_reports/checkstyle
      - uses: ./.github/actions/collect-reports
        if: always()
        with:
          file_pattern: lint-results-*.html
          output_folder: collected_reports/lint
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: checks-reports
          path: collected_reports

  app-tests-shards:
    needs: [setup]
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    strategy:
      matrix:
        index: [0, 1]
        groups_count: [2]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: .github_cache_gradle/
          key: tests-shards-gradle-${{ matrix.index }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('buildSrc/**/*.java') }}
          restore-keys: |
            tests-shards-gradle-
      - name: tests
        uses: ./.github/actions/test-shard-run
        with:
          index: ${{ matrix.index }}
          groups_count: ${{ matrix.groups_count }}
          module: ":ime:app:"
          extra_args: "-PexcludeTestClasses=\"**/*AllSdkTest*\""
      - uses: ./.github/actions/codecov
      - uses: ./.github/actions/collect-reports
        if: always()
        with:
          file_pattern: "**/build/reports/tests/**"
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: app-tests_${{ matrix.index }}
          path: collected_reports

  app-all-sdks-tests:
    needs: [setup]
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: .github_cache_gradle/
          key: tests-all-sdks-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('buildSrc/**/*.java') }}
          restore-keys: |
            tests-all-sdks-gradle-
      - name: tests
        uses: ./.github/actions/test-shard-run
        with:
          index: 0
          groups_count: 1
          module: ":ime:app:"
          extra_args: "--tests=*AllSdkTest*"
      - uses: ./.github/actions/codecov
      - uses: ./.github/actions/collect-reports
        if: always()
        with:
          file_pattern: "**/build/reports/tests/**"
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: app-less-tests
          path: collected_reports

  app-less-tests:
    needs: [setup]
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: .github_cache_gradle/
          key: tests-app-less-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('buildSrc/**/*.java') }}
          restore-keys: |
            tests-app-less-gradle-
      - name: tests
        uses: ./.github/actions/test-shard-run
        with:
          index: 0
          groups_count: 1
          module: ""
          extra_args: "-x :ime:app:testDebugUnitTest -x :ime:app:testDebugUnitTestCoverage"
      - uses: ./.github/actions/codecov
      - uses: ./.github/actions/collect-reports
        if: always()
        with:
          file_pattern: "**/build/reports/tests/**"
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: app-less-tests
          path: collected_reports

  deploy-dry-run:
    if: github.event_name == 'pull_request'
    needs: [setup]
    runs-on: ubuntu-18.04
    container: menny/ndk_ask:1.13.5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: .github_cache_gradle/
          key: dry-run-deploy-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('buildSrc/**/*.java') }}
          restore-keys: |
            dry-run-deploy-gradle-
      - uses: ./.github/actions/deploy
        with:
          ref: ${{ github.ref }}
          deploy_target: dry-run
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: fdroid-metadata-dry-run
          path: outputs/fdroid

  push-ready:
    if: github.event_name == 'push'
    needs: [setup, checks, app-all-sdks-tests, app-tests-shards, app-less-tests]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

  deploy-request:
    if: github.event_name == 'push'
    needs: [push-ready]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/deploy-request
        with:
          ref: ${{ github.ref }}
          sha: ${{ github.sha }}
          api_user_name: ${{ secrets.BOT_MASTER_RW_GITHUB_USERNAME }}
          api_user_token: ${{ secrets.BOT_MASTER_RW_GITHUB_TOKEN }}
          reports_folder: deploy-reports
      - uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: deploy-request
          path: deploy-reports
