apply plugin: 'jacoco'

jacoco {
    // https://bintray.com/bintray/jcenter/org.jacoco:org.jacoco.core
    toolVersion = "0.8.2"
}

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

project.afterEvaluate {

    if (project.plugins.hasPlugin('com.android.application')) {
        android.applicationVariants.all { variant ->
            def name = variant.name
            def testTaskName = "test${name.capitalize()}UnitTest"

            createJacocoReportTask(testTaskName, name)
        }
    } else if (project.plugins.hasPlugin('com.android.library')) {
        android.libraryVariants.all { variant ->
            def name = variant.name
            def testTaskName = "test${name.capitalize()}UnitTest"

            createJacocoReportTask(testTaskName, name)
        }
    }
}

private Task createJacocoReportTask(testTaskName, name) {
    return tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
        group = "Reporting"
        description = "Generate Jacoco coverage reports for the ${name.capitalize()} build."

        classDirectories = fileTree(
                dir: "${project.buildDir}/intermediates/javac/${name}",
                excludes: ['**/R.class',
                           '**/R$*.class',
                           'android/**/*.class',
                           '**/*$ViewInjector*.*',
                           '**/*$ViewBinder*.*',
                           '**/BuildConfig.*',
                           '**/*$Lambda$*.*',
                           '**/*Dagger*.*',
                           'android/**/*.*',
                           '**/*$*$*.*',
                           '**/Manifest*.*']
        )

        sourceDirectories = files(["${project.projectDir}/src/main/java"] + android.sourceSets[name].java.srcDirs)
        executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}