version: 2.0

references:

  workspace_root: &workspace_root
      /opt/workspace/

  container_config: &container_config
    docker:
      - image: menny/android_ndk:1.7.1

    working_directory: *workspace_root

    environment:
      CODECOV_TOKEN: 1a4cd171-2784-4f48-8a62-0b7ec31e6d7e
      COV_REPORT_LOCATION: app/build/reports/jacoco/testDebugUnitTestCoverage/testDebugUnitTestCoverage.xml
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx1800m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  general_cache_key: &general_cache_key
      key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
jobs:

  build:
    <<: *container_config
    resource_class: large
    steps:
      - checkout

      - restore_cache:
          <<: *general_cache_key

      - run:
          name: Setup environment
          command: scripts/ci_setup.sh

      - run:
          name: Initial build
          command: scripts/ci_assemble.sh

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/apk/
          destination: apks/

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

      - save_cache:
          <<: *general_cache_key
          paths:
            - "~/.gradle"
            - "~/.m2"
            - "/opt/android-sdk-linux/licenses/"

  check:
    <<: *container_config
    steps:
      - *attach_workspace

      - restore_cache:
          <<: *general_cache_key

      - run:
          name: Run Checks
          command: ./scripts/ci_check.sh

      - store_artifacts:
          path: /opt/workspace/app/build/reports/
          destination: lint_reports/app/

      - store_artifacts:
          path: /opt/workspace/base/build/reports/
          destination: lint_reports/base/

      - store_artifacts:
          path: /opt/workspace/jnidictionaryv1/build/reports/
          destination: lint_reports/jnidictionaryv1/

      - store_artifacts:
          path: /opt/workspace/jnidictionaryv2/build/reports/
          destination: lint_reports/jnidictionaryv2/

      - store_artifacts:
          path: /opt/workspace/nextword/build/reports/
          destination: lint_reports/nextword/

  test:
    <<: *container_config
    parallelism: 3
    steps:
      - *attach_workspace

      - restore_cache:
          <<: *general_cache_key

      - run:
          name: Run Tests
          command: |
            export TEST_GROUP_INDEX=${CIRCLE_NODE_INDEX}
            export TEST_GROUPS_COUNT=${CIRCLE_NODE_TOTAL}
            echo "Running test group ${TEST_GROUP_INDEX} out of ${TEST_GROUPS_COUNT}..."
            ./scripts/ci_test.sh
            if [[ -f $COV_REPORT_LOCATION ]]; then
              curl https://codecov.io/bash -o codecov.sh
              chmod +x codecov.sh
              ./codecov.sh -X gcov -X coveragepy -f ${COV_REPORT_LOCATION}
            fi

      - store_artifacts:
          path: app/build/reports/tests/
          destination: tests_reports/

      - store_test_results:
          path: /opt/workspace/app/build/test-results

  deploy:
    <<: *container_config
    steps:
      - *attach_workspace

      - restore_cache:
          <<: *general_cache_key

      - run:
          name: Deploy to Play Store
          command: |
            ./scripts/ci_deploy.sh ${UPLOAD_KEYSTORE_FILE_URL} ${PUBLISH_CERT_FILE_URL} ${CIRCLE_PROJECT_USERNAME} ${CIRCLE_BRANCH}

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/apk/
          destination: apks/

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/mapping/
          destination: mapping/

workflows:
  version: 2

  build_check_tests_deploy:
    jobs:
      - build
      - check:
          requires:
            - build
      - test:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
                - release-branch
          requires:
            - test
            - check
